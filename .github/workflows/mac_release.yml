env:
    QT_VERSION: '5.14.2'
    SQLITE_VERSION: '3310100'
    SQLITE_RELEASE_YEAR: '2020'
    TCL_VERSION: '8.6'
    PORTABLE_DIR: ${{ github.workspace }}/output/portable/SQLiteStudio

name: MaxOSX release build

on:
    # repository_dispatch:
        # types: [lin_release]
    push:
        branches:
            - 3.2
jobs:
    build:
        runs-on: macos-latest

        steps:
            # - name: Debug
              # run: |
                # ls -l /usr/local/
                # ls -l /usr/local/include
                # ls -l /usr/local/opt/
                # ls -l /usr/local/opt/openssl/include/
                # ls -l /usr/local/opt/expat/include

            - name: Cache Qt
              id: cache-qt
              uses: actions/cache@v1
              with:
                path: ${{ github.workspace }}/../Qt
                key: ${{ runner.os }}-Qt-Mac-Cache
                
            - name: Install Qt
              uses: jurplel/install-qt-action@v2
              with:
                cached: ${{ steps.cache-qt.outputs.cache-hit }}
                version: ${{ env.QT_VERSION }}
                host: 'mac'
                dir: '${{ github.workspace }}/..'
                modules: 'qtscript'
                
            - name: Clone repo
              uses: actions/checkout@v2
              with:
                ref: ${{ github.event.client_payload.branch }}

            - name: Install SQLite3
              run: |
                wget http://sqlite.org/$SQLITE_RELEASE_YEAR/sqlite-autoconf-$SQLITE_VERSION.tar.gz
                tar xzf sqlite-autoconf-$SQLITE_VERSION.tar.gz
                cd sqlite-autoconf-$SQLITE_VERSION
                ./configure --enable-fts5 --enable-json1 --enable-session
                make
                sudo make install
                sqlite3 --version

            - name: Prepare deps
              run: |
                mkdir ../lib ../include
                cp /usr/local/lib/libsqlite3* ../lib
                cp /usr/local/include/sqlite3* ../include
            
            - name: Prepare output dir
              run: mkdir output output/build output/build/Plugins
            
            - name: Compile SQLiteStudio3
              working-directory: output/build
              run: |
                qmake CONFIG+=portable ../../SQLiteStudio3
                make -j 2
            
            - name: Compile Plugins
              working-directory: output/build/Plugins
              run: |
                qmake CONFIG+=portable ../../../Plugins
                make -j 2
              
            - name: Build packages
              working-directory: output/build
              run: |
                make bundle
                make pkg
                
            - name: Determine SQLiteStudio version
              working-directory: output/portable
              run: |
                ls -l
                echo One up
                ls -l ..
                echo ::set-env name=SQLITESTUDIO_VERSION::$(SQLiteStudio.app/Contents/MacOS/sqlitestudiocli -v | awk '{print $2}')
                

            - name: Upload package artifact
              uses: actions/upload-artifact@v1
              with:
                name: sqlitestudio-${{ env.SQLITESTUDIO_VERSION }}.dmg
                path: output/portable/sqlitestudio-${{ env.SQLITESTUDIO_VERSION }}.dmg


            # - name: Determine SQLiteStudio version
              # working-directory: ${{ env.PORTABLE_DIR }}
              # run: echo ::set-env name=SQLITESTUDIO_VERSION::$(./sqlitestudiocli --version | cut -f 2 -d ' ')

            # - name: Assemble portable package
              # shell: bash
              # working-directory: ${{ env.PORTABLE_DIR }}/..
              # run: |
                # tar cf sqlitestudio-$SQLITESTUDIO_VERSION.tar SQLiteStudio
                # xz -z sqlitestudio-$SQLITESTUDIO_VERSION.tar
                # pwd
                # ls -l

            # - name: Upload package artifact
              # uses: actions/upload-artifact@v1
              # with:
                # name: sqlitestudio-${{ env.SQLITESTUDIO_VERSION }}.tar.xz
                # path: output/portable/sqlitestudio-${{ env.SQLITESTUDIO_VERSION }}.tar.xz
